[versions]
# Kotlin
kotlin = "1.9.21" # check also ksp
kotlinx-immutableCollections = "0.3.7"
kotlinx-datetime = "0.5.0"
kotlinx-serialization-protobuf = "1.6.2"
kotlinx-coroutines = "1.7.3"

# UI
compose-bom = "2023.10.01"
activity-compose = "1.8.2"
compose-compiler = "1.5.7"
compose-material3 = "1.2.0"
androidx-lifecycle = "2.7.0"
coil = "2.5.0"
eva = "1.0.0"
core-splashscreen = "1.0.1"
appcompat = "1.6.1"
eygraber-placeholder-m3 = "1.0.7"
security-cryptoKtx = "1.1.0-alpha06"

# Navigation
compose-destinations = "1.9.62" # check compose version

# Dependency Injection
hilt = "2.49"
hilt-navigation-compose = "1.1.0"

# Database
room = "2.6.1"

# Datastore
datastore = "1.0.0"
encryptedDatastore = "1.0.0-beta01"

# Logging
timber = "5.0.1"

# Testing
## Unit
junit4 = "4.13.2"
junit5 = "5.10.2"
assertk = "0.28.0"
turbine = "1.0.0"
## Instrumented
test-core = "1.5.0"
espresso-core = "3.5.1"
test-ext-junit = "1.1.5"
test-rules = "1.5.0"
test-runner = "1.5.2"
uiAutomator = "2.2.0"

# Desugaring
desugar-jdk-libs = "2.0.4"

# Formatting + Linting
detekt = "1.23.5"
nlopez-composeRules = "0.3.11"
compose-lints = "1.3.0" # 1.3.1 does not respect `ComposeCompositionLocalUsage` allow list in lint.xml

# API calls
retrofit = "2.9.0"
retrofit-kotlinx-serialization-json = "1.0.0"
okhttp = "4.12.0"

# Plugins
android-gradle-plugin = "8.2.2"
ksp = "1.9.21-1.0.16" # check kotlin version
junit5-plugin = "1.10.0.0"
kotlinx-serialization-plugin = "1.9.21"

[libraries]
# Kotlin
kotlin-stdlib = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlinx-immutableCollections = { group = "org.jetbrains.kotlinx", name = "kotlinx-collections-immutable", version.ref = "kotlinx-immutableCollections" }
kotlinx-datetime = { group = "org.jetbrains.kotlinx", name = "kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-serialization-protobuf = { group = "org.jetbrains.kotlinx", name = "kotlinx-serialization-protobuf", version.ref = "kotlinx-serialization-protobuf" }
kotlinx-coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }

# UI
activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activity-compose" }
compose-bom = { group = "androidx.compose", name = "compose-bom", version.ref = "compose-bom" }
compose-runtime = { group = "androidx.compose.runtime", name = "runtime" }
compose-foundation = { group = "androidx.compose.foundation", name = "foundation" }
compose-ui = { group = "androidx.compose.ui", name = "ui" }
compose-ui-util = { group = "androidx.compose.ui", name = "ui-util" }
compose-ui-graphics = { group = "androidx.compose.ui", name = "ui-graphics" }
compose-ui-tooling = { group = "androidx.compose.ui", name = "ui-tooling" }
compose-ui-tooling-preview = { group = "androidx.compose.ui", name = "ui-tooling-preview", version = "1.6.1" }
compose-animation = { group = "androidx.compose.animation", name = "animation" }
compose-material3 = { group = "androidx.compose.material3", name = "material3", version.ref = "compose-material3" }
compose-material3-windowSizeClass = { group = "androidx.compose.material3", name = "material3-window-size-class", version.ref = "compose-material3" }
lifecycle-viewModel-compose = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }

# collectAsStateWithLifecycle()
lifecycle-runtimeCompose = { group = "androidx.lifecycle", name = "lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# SavedStateHandle
lifecycle-viewModel-savedstate = { group = "androidx.lifecycle", name = "lifecycle-viewmodel-savedstate", version.ref = "androidx-lifecycle" }

coil = { group = "io.coil-kt", name = "coil", version.ref = "coil" }
coil-compose = { group = "io.coil-kt", name = "coil-compose", version.ref = "coil" }
icons-material-core = { group = "androidx.compose.material", name = "material-icons-core" }
icons-material-extended = { group = "androidx.compose.material", name = "material-icons-extended" }
icons-eva = { group = "br.com.devsrsouza.compose.icons.android", name = "eva-icons", version.ref = "eva" }
core-splashscreen = { group = "androidx.core", name = "core-splashscreen", version.ref = "core-splashscreen" }
appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
skeletonLoader = { group = "com.eygraber", name = "compose-placeholder-material3", version.ref = "eygraber-placeholder-m3" }
security-cryptoKtx = { group = "androidx.security", name = "security-crypto-ktx", version.ref = "security-cryptoKtx" }

# Navigation
compose-destinations-core = { group = "io.github.raamcosta.compose-destinations", name = "core", version.ref = "compose-destinations" }
compose-destinations-ksp = { group = "io.github.raamcosta.compose-destinations", name = "ksp", version.ref = "compose-destinations" }

# Dependency Injection
hilt-android = { group = "com.google.dagger", name = "hilt-android", version.ref = "hilt" }
hilt-android-compiler = { group = "com.google.dagger", name = "hilt-android-compiler", version.ref = "hilt" }
hilt-android-testing = { group = "com.google.dagger", name = "hilt-android-testing", version.ref = "hilt" }

# hiltViewModel()
hilt-navigation-compose = { group = "androidx.hilt", name = "hilt-navigation-compose", version.ref = "hilt-navigation-compose" }

# Database
room-compiler = { group = "androidx.room", name = "room-compiler", version.ref = "room" }
room-ktx = { group = "androidx.room", name = "room-ktx", version.ref = "room" }
room-runtime = { group = "androidx.room", name = "room-runtime", version.ref = "room" }

# Datastore
datastore-core = { group = "androidx.datastore", name = "datastore", version.ref = "datastore" }
encryptedDatastore = { group = "io.github.osipxd", name = "security-crypto-datastore", version.ref = "encryptedDatastore" }

# Logging
timber = { group = "com.jakewharton.timber", name = "timber", version.ref = "timber" }

# Testing
## Unit
junit4 = { group = "junit", name = "junit", version.ref = "junit4" }
junit5 = { group = "org.junit.jupiter", name = "junit-jupiter-api", version.ref = "junit5" }
junit5-engine = { group = "org.junit.jupiter", name = "junit-jupiter-engine", version.ref = "junit5" }
junit5-params = { group = "org.junit.jupiter", name = "junit-jupiter-params", version.ref = "junit5" }
assertk = { group = "com.willowtreeapps.assertk", name = "assertk", version.ref = "assertk" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine" }
## Instrumented
composeTest-junit4 = { group = "androidx.compose.ui", name = "ui-test-junit4" }
composeTest-manifest = { group = "androidx.compose.ui", name = "ui-test-manifest" }
test-core = { group = "androidx.test", name = "core-ktx", version.ref = "test-core" }
test-espresso-core = { group = "androidx.test.espresso", name = "espresso-core", version.ref = "espresso-core" }
test-ext-junit = { group = "androidx.test.ext", name = "junit-ktx", version.ref = "test-ext-junit" }
test-rules = { group = "androidx.test", name = "rules", version.ref = "test-rules" }
test-runner = { group = "androidx.test", name = "runner", version.ref = "test-runner" }
test-uiAutomator = { group = "androidx.test.uiautomator", name = "uiautomator", version.ref = "uiAutomator" }

# Desugaring
android-desugarJdkLibs = { group = "com.android.tools", name = "desugar_jdk_libs", version.ref = "desugar-jdk-libs" }

# Formatting + Linting
detekt-formatting = { group = "io.gitlab.arturbosch.detekt", name = "detekt-formatting", version.ref = "detekt" }
linting-composeDetekt = { group = "io.nlopez.compose.rules", name = "detekt", version.ref = "nlopez-composeRules" }
linting-composeLints = { group = "com.slack.lint.compose", name = "compose-lint-checks", version.ref = "compose-lints" }

# API calls
retrofit-core = { group = "com.squareup.retrofit2", name = "retrofit", version.ref = "retrofit" }
retrofit-kotlin-serialization = { group = "com.jakewharton.retrofit", name = "retrofit2-kotlinx-serialization-converter", version.ref = "retrofit-kotlinx-serialization-json" }
okhttp-logging = { group = "com.squareup.okhttp3", name = "logging-interceptor", version.ref = "okhttp" }

[plugins]
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
android-application = { id = "com.android.application", version.ref = "android-gradle-plugin" }
hilt = { id = "com.google.dagger.hilt.android", version.ref = "hilt" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
junit5 = { id = "de.mannodermaus.android-junit5", version.ref = "junit5-plugin" }
android-test = { id = "com.android.test", version.ref = "android-gradle-plugin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlinx-serialization-plugin" }
